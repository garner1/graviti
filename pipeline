TBD:
-how to use RG? sum geometric and morphological graph, and use RG to renormalize this graph towards the low energy sector.
-community detection on the morphological + geometric graph (intead of element-wise product, use the sum)
-community detection on the morphological graph alone
###########################################
#TO SPLIT LARGE TIF INTO SMALLER TILES
/usr/local/share/anaconda3/bin/python3.7 pipe0.tiff_split.py ~/Work/dataset/tissue2graph/tissues iMS337_20190709_001 ~/Work/dataset/tissue2graph/tissues/tiles 500
###########################################
# PARAMETERS:
# H5 file
# TIF file
# npz output filename
# descriptor type: rotationally invariant or not (this does not aftect the invariance of the log-forbenius metric, which is a global property of the metric,not of the descriptor)
# filename of the report

parallel --link "/usr/local/share/anaconda3/bin/python3.7 pipe1.img2descriptor.py /home/garner1/Work/dataset/tissue2graph/h5_post_watershed/iMS266_20190426_001.sub{}_Segmented_mask.h5 /home/garner1/Work/dataset/tissue2graph/tif/iMS266_20190426_001.sub{}.tif /home/garner1/Work/dataset/tissue2graph/npz/iMS266_20190426_001.sub{} covd ID52.report" ::: $(seq 575) > ID52.small_pixel_regions

# Generate the spatial and morphological information per FOV
####################################
# COMPRESS OUTPUT FILES
parallel "gzip {}" ::: ID52.report ID52.small_pixel_regions
####################################
# Parameters:
# npz files directory
# descriptor type
# size in pixels of the fov
# patient ID

/usr/local/share/anaconda3/bin/python3.7 pipe2.descriptor2data.py /home/garner1/Work/dataset/tissue2graph/npz covd_ 1024 ID52

# Format spatial and morphological data in a global output file pat52_covd_X-XY-RC_data.npz
####################################
# INPUT: data matrices X and XY and RC
# Parameters:
# npz file with spatial and morphological information for the patient
# descriptor type
# patient ID

parallel "/usr/local/share/anaconda3/bin/python3.7 pipe3.data2graph.py /home/garner1/Work/pipelines/tissue2graph/pat52_covd_X-XY-RC_data covd ID52 {}" ::: spatial morphological

# OUTPUT: graph as sparse weighted matrices in csr format
# /home/garner1/Work/pipelines/tissue2graph/pat52_covd_X-XY-RC_data_XYgraph_nn??.npz
# /home/garner1/Work/pipelines/tissue2graph/pat52_covd_X-XY-RC_data_Xgraph_nn??.npz
####################################
# TO CREATE GRAPH PARTITIONS WITH LEIDEN ALGO
/usr/local/share/anaconda3/bin/python3.7 pipe4.partition.py ~/Work/dataset/tissue2graph/tissues/ID52/pat52_covd_spatial_nn19.npz ~/Work/dataset/tissue2graph/tissues/ID52/pat52_covd_X-XY-RC_data.npz ID52_spatial_partition

# TO DO RG ON 1 BIG GRAPH
/usr/local/share/anaconda3/bin/python3.7 pipe4.RGon1graph.py  ~/Work/dataset/tissue2graph/tissues/ID52/pat52_covd_spatial_nn19.npz ~/Work/dataset/tissue2graph/tissues/ID52/pat52_covd_X-XY-RC_data.npz 0.1 restricted 52

# TO DO RG ON MANY SMALL GRAPH PARTITIONS
parallel "/usr/local/share/anaconda3/bin/python3.7 pipe4.RGonPartitions.py ~/Work/dataset/tissue2graph/tissues/ID52/pat52_covd_spatial_nn19.npz {} 0.1 ~/Work/dataset/tissue2graph/tissues/ID52/pat52_covd_X-XY-RC_data.npz ID52_spatial_partition.209.pkl 52" ::: $(seq 209)